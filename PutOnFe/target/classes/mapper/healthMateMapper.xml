<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.putupiron.healthmate">
	<!-- 목록 -->
	<select id="postList" parameterType="MatchCondition" resultType="HealthMate_Post">
		select * from healthmate_post
		where partner is null <if test="part!='all'">and part=#{part}</if>
		and (#{startDate} &lt;= date and date &lt; #{endDate})
		and (#{startTime} &lt;= time and time &lt;= #{endTime})
		order by date asc, time asc, poster_big3 desc, post_no desc;
	</select>
	<!-- 포스트 매칭요청 수 갱신 -->
	<update id="requests" parameterType="HealthMate_Post">
		update healthmate_post set requests=#{requests}
		where post_no=#{post_no}
	</update>
	<!-- 매칭 등록 -->
	<insert id="post" parameterType="HealthMate_Post">
		insert into healthmate_post
		(poster,poster_name,poster_gender,poster_big3,part,date,time)
		values
		(#{poster},#{poster_name},#{poster_gender},#{poster_big3},#{part},#{date},#{time})
	</insert>
	<!-- 매칭 요청 -->
	<insert id="request" parameterType="HealthMate_Join">
		insert into healthmate_join
		(post_no, requester, req_name, req_gender, req_big3)
		values
		(#{post_no},#{requester},#{req_name},#{req_gender},#{req_big3})
	</insert>
	<!-- 매칭 등록 취소 -->
	<delete id="deletePost" parameterType="int">
		delete from healthmate_post
		where post_no=#{post_no}
	</delete>
	<!-- 매칭 요청 취소 -->
	<delete id="requestCancel" parameterType="int">
		delete from healthmate_join
		where join_no=#{join_no}
	</delete>
	<!-- 매칭 요청 목록 -->
	<select id="requestList" parameterType="int" resultType="HealthMate_Join">
		select * from healthmate_join
		where post_no=#{post_no}
		order by join_no desc;
	</select>
	<!-- 자신이 등록한 매칭 목록 -->
	<select id="myPost" parameterType="String" resultType="HealthMate_Post">
		select healthmate_post.*, username.name as partner_name
		from healthmate_post left join username
		on healthmate_post.partner=username.email
		where healthmate_post.poster=#{poster}
		order by post_no desc
	</select>
	<!-- 자신의 요청 목록 -->
	<select id="myRequest" parameterType="String" resultType="HealthMate_Post">
		select P.*, J.join_no, J.requester, J.status
		from healthmate_post as P inner join healthmate_join as J on P.post_no=J.post_no
		where requester=#{requester}
		order by join_no desc
	</select>
	<!-- 매칭 완료 -->
	<update id="confirm" parameterType="HealthMate_Join">
		update healthmate_post set partner=#{requester}
		where post_no=#{post_no}
	</update>
	<!-- 매칭 완료된 요청 표시 -->
	<update id="joinStatus" parameterType="int">
		update healthmate_join set status="matched"
		where join_no=#{join_no}
	</update>
	<!-- 매칭 완료시 해당 포스트의 모든 요청 삭제 -->
	<delete id="deleteAllRequestsOfConfirmedPost" parameterType="int">
		delete from healthmate_join
		where post_no=#{post_no} and not(status="matched")
	</delete>
	<!-- 해당 유저의 완료된 매칭을 날짜, 시간 순서대로 불러오기 -->
	<select id="confirmedPostOfUser" parameterType="String" resultType="MyMatch">
		select poster_name, part, date, time, username.name as partner_name
		from healthmate_post inner join username on partner=email
		where poster=#{email} or partner=#{email}
		order by date, time, post_no;
	</select>
</mapper>