<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.putupiron.pufe">
	<!-- 로그인 -->
	<select id="selectUser" parameterType="String" resultType="User">
		select * from user where user_email=#{user_email}
	</select>
	<!-- 회원가입 -->
	<insert id="join" parameterType="JoinData">
		insert into user values(#{user_email},#{user_pw},#{user_name},#{gender},#{user_tel},"U",null,null,null,0,0,0,0)
	</insert>
	<!-- 이메일찾기 -->
	<select id="findEmail" parameterType="map" resultType="String">
		select user_email from user where <if test='type=="R"'>user_email=#{email} and</if> user_name=#{name} and user_tel=#{phone}
	</select>
	<!-- 비밀번호 재설정 -->
	<update id="resetPw" parameterType="map">
		update user set user_pw=#{user_pw} where user_email=#{user_email}
	</update>
	<!-- Big3 랭킹집계 -->
	<select id="bigThreeRank" resultType="BigThree">
		select rank() over (order by squat+benchpress+deadlift desc) as ranking, user_email, user_name,	(squat+benchpress+deadlift) as big3, squat, benchpress, deadlift
		from user
		order by big3 desc, user_name desc
	</select>
	<!-- 유저 Big3 랭킹정보 -->
	<select id="userBig3Rank" parameterType="String" resultType="int">
		select ranking from rankingView where user_email=#{email};
	</select>
	<!-- 유저 이름 찾기 -->
	<select id="findUserName" parameterType="String" resultType="String">
		select user_name from user where user_email=#{email}
	</select>
	<!-- 회원정보 변경 -->
	<update id="modify" parameterType="map">
		update user set user_name=#{user_name}, user_tel=#{user_tel} where user_email=#{user_email}
	</update>
	<!-- 회원 탈퇴 -->
	<delete id="unregister" parameterType="String">
		delete from user where user_email=#{email}
	</delete>
	<!-- 회원정보 출력(일반회원) -->
	<select id="selectAllUserView" resultType="UserView">
		select user_view.*, username.name as trainer_name
		from user_view left join username on user_view.trainer=username.email
		order by user_name
	</select>
	<!-- 회원 3대중량 기록 변경 -->
	<select id="big3Edit" parameterType="BigThree">
		update user set squat=#{squat}, benchpress=#{benchpress}, deadlift=#{deadlift} where user_email=#{user_email}
	</select>
	<!-- 회원정보 출력(트레이너) -->
	<select id="selectAllTrainer" resultType="TrainerView">
		select user_email, user_name, gender, user_tel, members, (user.squat+user.benchpress+user.deadlift) as big3
		from user left join trainer_view on user.user_email=trainer_view.trainer
		where user.user_type="T"
		order by user_name
	</select>
	<!-- 회원정보 출력(관리자) -->
	<select id="selectAllAdmin" resultType="UserView">
		select user_email, user_name, gender, user_tel, (user.squat+user.benchpress+user.deadlift) as big3
		from user where user_type="A"
		order by user_name
	</select>
	<!-- 회원통계 -->
	<select id="statistics" resultType="Statistics">
		select	count(*) as total,
				count(case when user_type="A" then 1 end) as admin,
				count(case when user_type="T" then 1 end) as trainer,
				count(case when user_type="U" then 1 end) as user,
				count(prod_name) as product,
				count(trainer) as pt
		from user
	</select>
	<!-- 회원 유형 변경 -->
	<update id="changeUserType" parameterType="map">
		update user set user_type=#{user_type} where user_email=#{user_email}
	</update>
	<!-- 회원 전담트레이너 변경 -->
	<update id="changeTrainer" parameterType="map">
		update user set trainer=#{trainer} where user_email=#{user_email}
	</update>
	<!-- 트레이너 등록회원목록 출력 -->
	<select id="selectTrainerUsers" parameterType="String" resultType="TrainerInfo">
		select	user_name, gender, user_tel, user_email, user.prod_name, buy_date,
				(buy_date+interval period*30 day) as end_date, pt_times,
				(times-PT_times) as pt_remain, (squat+benchpress+deadlift) as big3, squat, benchpress, deadlift
		from user left join goods on user.prod_name=goods.goods_name
		where trainer=#{email} order by user_name;
	</select>
	<!-- 홈 화면 회원정보 출력(일반회원) -->
	<select id="homeUserView" parameterType="String" resultType="UserView">
		select user_view.*, username.name as trainer_name
		from user_view left join username on user_view.trainer=username.email
		where user_email=#{email}
	</select>
	<!-- 상품구매날짜 만료 시 유저의 상품구매정보 삭제 -->
	<update id="deleteExpiredGoods">
		update user left join goods on user.prod_name=goods.goods_name
		set user.prod_name=null, user.buy_date=null, trainer=null, pt_times=0
		where (user.buy_date + interval goods.period*30 day)&lt;date_format(now(),'%Y-%m-%d');
	</update>
</mapper>